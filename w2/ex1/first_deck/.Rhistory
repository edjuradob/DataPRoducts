edk<-resid(lm(dk~kms))
epp<-resid(lm(pp~kms))
summary(lm(edk~epp-1))$coef
summary(lm(edk~epp-1))$coef
summary(fitfull)$coef
head(mtcars)
factor(mtcars$cyl)
g = ggplot(mtcars, aes(x = wt, y = mpg, colour = factor(cyl)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in wt") + ylab("mpg")
g
library(ggplot2)
g = ggplot(mtcars, aes(x = wt, y = mpg, colour = factor(cyl)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in wt") + ylab("mpg")
g
summary(lm(mpg ~ wt, data = mtcars))$coef
summary(lm(mpg ~ wt, data = mtcars))$coef
summary(lm(mpg ~ wt + factor(cyl), data = mtcars))$coef
summary(lm(mpg ~ factor(cyl), data = mtcars))$coef
summary(lm(mpg ~ wt + factor(cyl), data = mtcars))$coef
log(1)
log(2)
log(4)
log(10)
log(e)
euler
log(2,2)
log(100,10)
head(mtcars)
??mtcars
head(mtcars)
mtcars[mtcars$am==1,)
mtcars[mtcars$am==1,]
boxplot(mtcars[mtcars$am==1,])
boxplot(mtcars[mtcars$am==1,],mtcars$mpg)
boxplot(mtcars[mtcars$am==1,],mtcars$mpg)
boxplot(mtcars$am[mtcars$am==1],mtcars$mpg)
boxplot(mtcars$am[mtcars$am==1])
boxplot(mtcars$mpg[mtcars$am==1])
par(mfrow = c(1,3))
boxplot(mtcars$mpg[mtcars$am==1])
boxplot(mtcars$mpg[mtcars$am==0])
par(mfrow = c(1,2))
# “Is an automatic or manual transmission better for MPG”
# "Quantify the MPG difference between automatic and manual transmissions"
boxplot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
boxplot(mtcars$mpg[mtcars$am==0])
par(mfrow = c(1,2))
# “Is an automatic or manual transmission better for MPG”
# "Quantify the MPG difference between automatic and manual transmissions"
boxplot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
boxplot(mtcars$mpg[mtcars$am==0],ylab="Miles per gallon",xlab="Manual")
summary(mtcars)
summary(mtcars$mpg[mtcars$am==1])
summary(mtcars$mpg[mtcars$am==1])
summary(mtcars$mpg[mtcars$am==0]
summary(lm(mpg ~ wt + factor(am), data = mtcars))$coef
summary(lm(mpg ~ wt + factor(am), data = mtcars))$coef
summary(lm(mpg ~ factor(am), data = mtcars))$coef
summary(lm(mpg ~ factor(am), data = mtcars))$coef
summary(lm(mpg ~ wt + factor(am), data = mtcars))$coef
par(mfrow = c(1,2))
# “Is an automatic or manual transmission better for MPG”
# "Quantify the MPG difference between automatic and manual transmissions"
boxplot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
boxplot(mtcars$mpg[mtcars$am==0],ylab="Miles per gallon",xlab="Manual")
summary(mtcars$mpg[mtcars$am==1])
summary(mtcars$mpg[mtcars$am==0])
summary(lm(mpg ~ factor(am), data = mtcars))$coef
summary(lm(mpg ~ wt + factor(am), data = mtcars))$coef
plot(cars)
summary(cars)
boxplot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
boxplot(mtcars$mpg[mtcars$am==0],ylab="Miles per gallon",xlab="Manual")
par(mfrow = c(1,2))
# “Is an automatic or manual transmission better for MPG”
# "Quantify the MPG difference between automatic and manual transmissions"
boxplot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
boxplot(mtcars$mpg[mtcars$am==0],ylab="Miles per gallon",xlab="Manual")
plot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
plot(mtcars$mpg[mtcars$am==0],ylab="Miles per gallon",xlab="Manual")
library(ggplot2)
g = ggplot(mtcars, aes(x = wt, y = mpg, colour = factor(cyl)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in wt") + ylab("mpg")
g
boxplot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
boxplot(mtcars$mpg[mtcars$am==0],ylab="Miles per gallon",xlab="Manual")
plot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
plot(mtcars$mpg[mtcars$am==0],ylab="Miles per gallon",xlab="Manual")
summary(mtcars$mpg[mtcars$am==1])
summary(mtcars$mpg[mtcars$am==0])
# "Quantify the MPG difference between automatic and manual transmissions"
boxplot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
boxplot(mtcars$mpg[mtcars$am==0],ylab="Miles per gallon",xlab="Manual")
summary(lm(mpg ~ factor(am), data = mtcars))$coef
summary(lm(mpg ~ wt + factor(am), data = mtcars))$coef
summary(lm(mpg ~ factor(am), data = mtcars))$coef
summary(lm(mpg ~ wt + factor(am), data = mtcars))$coef
summary(lm(mpg ~ 1+wt + factor(am), data = mtcars))$coef
library(MASS)
lmShuttlef<-glm(use2~factor(wind)+factor(magn)-1, data=s2, family="binomial")
summary(lmShuttlef)$coef
exp(coef(lmShuttlef))
odds<-exp(coef(lmShuttlef))[1]/exp(coef(lmShuttlef))[2]
odds
s2<-shuttle
s2$use2<-as.numeric(s2$use=='auto')
lmShuttlef<-glm(use2~factor(wind)-1, data=s2, family="binomial")
summary(lmShuttlef)$coef
exp(coef(lmShuttlef))
odds<-exp(coef(lmShuttlef))[1]/exp(coef(lmShuttlef))[2]
odds
lmShuttlef<-glm(use2~factor(wind)+factor(magn)-1, data=s2, family="binomial")
summary(lmShuttlef)$coef
exp(coef(lmShuttlef))
odds<-exp(coef(lmShuttlef))[1]/exp(coef(lmShuttlef))[2]
odds
summary(lm(mpg ~ factor(am), data = mtcars))$coef
summary(lm(mpg ~ 1+wt + factor(am), data = mtcars))$coef
summary(lm(mpg ~ factor(am), data = mtcars))$coef
summary(lm(mpg ~ 1+wt + factor(am), data = mtcars))$coef
lmTransmission<-lm(mpg ~ factor(am), data = mtcars)
lmTransWeigt<-lm(mpg ~ wt + factor(am)-1, data = mtcars)
lmTransmission<-lm(mpg ~ factor(am), data = mtcars)
lmTransWeigt<-lm(mpg ~ wt + factor(am)-1, data = mtcars)
summary(lmTransmission)$coef
summary(lmTransWeigt)$coef
oddsT<-exp(coef(lmTransmission))[1]/exp(coef(lmTransmission))[2]
oddsTW<-exp(coef(lmTransWeigt))[1]/exp(coef(lmTransWeigt))[2]
odds
oddsT
oddsTW
exp(coef(lmTransmission))
summary(lmTransmission)$coef
summary(lmTransmission)$coef
summary(lmTransWeigt)$coef
library(ggplot2)
g = ggplot(mtcars, aes(x = wt, y = mpg, colour = factor(cyl)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in wt") + ylab("mpg")
g
summary(lm(mpg ~ wt, data = mtcars))$coef
summary(lm(mpg ~ wt + factor(cyl), data = mtcars))$coef
summary(lm(mpg ~ factor(cyl), data = mtcars))$coef
summary(lm(mpg ~ wt + factor(cyl), data = mtcars))$coef
head(mtcars)
lmTransmission<-lm(mpg ~ factor(am), data = mtcars)
lmTransWeigt<-lm(mpg ~ wt + factor(am)-1, data = mtcars)
lmAll<-lm(mpg~cyl + disp + hp + drat + wt + qsec + vs + factor(am) + gear + carb)
summary(lmTransmission)$coef
summary(lmTransWeigt)$coef
summary(lmAll)$coef
lmAll<-lm(mpg~cyl + disp + hp + drat + wt + qsec + vs + factor(am) + gear + carb)
lmTransmission<-lm(mpg ~ factor(am), data = mtcars)
lmTransWeigt<-lm(mpg ~ wt + factor(am)-1, data = mtcars)
lmAll<-lm(mpg~cyl + disp + hp + drat + wt + qsec + vs + factor(am) + gear + carb, data= mtcars)
summary(lmTransmission)$coef
summary(lmTransWeigt)$coef
summary(lmAll)$coef
lmTransmission<-lm(mpg ~ factor(am), data = mtcars)
lmTransWeigt<-lm(mpg ~ wt + factor(am)-1, data = mtcars)
lmAll<-lm(mpg~cyl + disp + hp + drat + wt + qsec + vs +
factor(am) + gear + carb -1, data= mtcars)
summary(lmTransmission)$coef
summary(lmTransWeigt)$coef
summary(lmAll)$coef
par(mfrow = c(1,2))
# “Is an automatic or manual transmission better for MPG”
# "Quantify the MPG difference between automatic and manual transmissions"
boxplot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
boxplot(mtcars$mpg[mtcars$am==0],ylab="Miles per gallon",xlab="Manual")
boxplot(mtcars~mpg,ylab="Miles per gallon",xlab="Transmission type")
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars, legend="0 manual, 1 automatic")
par(mfrow=c(1,1))
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars, legend="0 manual, 1 automatic")
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("red", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(1, 30, legend=c("0 Manual", "1 automatic"),col=c("red", "blue"),
lty=1:2, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(1, 30, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
lty=1:2, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(1, 30, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"))
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(1, 30, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue")),
lty=1:2, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(1, 30, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
lty=1:2, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(1, 30, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
lty=1:2, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(1, 30, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
lty=1:2, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(-1, 30, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
lty=1:2, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(0, 30, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
lty=1:2, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(0.5, 30, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
lty=1:2, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
# it seems like the manual cars have a lower mean than the automatic ones, and have
# more deviation. We must see how it behaves more detailed
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
lty=1:2, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
lty=1:3, cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
lty=1:1, cex=0.8)
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
fill=topo.colors(3), cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
fill=topo.colors(3), cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
fill=topo.colors(2), cex=0.8)
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
fill=topo.colors(1), cex=0.8)
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
fill=topo.colors(2), cex=0.8)
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
fill=topo.colors(2), cex=0.8)
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("green", "blue"),
fill=topo.colors(3), cex=0.8)
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),col=c("blue", "green"),
fill=topo.colors(3), cex=0.8)
legend(0.5, 32, legend=c("0 Manual", "1 Automatic"),#col=c("blue", "green"),
fill=topo.colors(3), cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
legend(0.5, 32, legend=c("Automatic", "Manual"),#col=c("blue", "green"),
fill=topo.colors(3), cex=0.8)
plot(mtcars$mpg[mtcars$am==1],ylab="Miles per gallon",xlab="Automatic")
plot(mtcars$mpg[mtcars$am==0],ylab="Miles per gallon",xlab="Manual")
plot(mpg~factor(am),ylab="Miles per gallon",xlab="Manual",data=mtcars)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
legend(0.5, 32, legend=c("Automatic", "Manual"),#col=c("blue", "green"),
fill=topo.colors(3), cex=0.8)
summary(mtcars$mpg[mtcars$am==1])
summary(mtcars$mpg[mtcars$am==0])
lmTransmission<-lm(mpg ~ factor(am), data = mtcars)
lmTransWeigt<-lm(mpg ~ wt + factor(am)-1, data = mtcars)
lmAll<-lm(mpg~cyl + disp + hp + drat + wt + qsec + vs +
factor(am) + gear + carb -1, data= mtcars)
summary(lmTransmission)$coef
summary(lmTransWeigt)$coef
summary(lmAll)$coef
lm(mpg~.,data=mtcars)
??mtcars
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
legend(0.5, 32, legend=c("Automatic", "Manual"),#col=c("blue", "green"),
fill=topo.colors(3), cex=0.8)
boxplot(mpg~am,ylab="Miles per gallon",xlab="Transmission type", data=mtcars,
col=c("green", "blue"))
legend(0.5, 32, legend=c("Automatic", "Manual"),col=c("green", "blue"),
fill=topo.colors(3), cex=0.8)
plot(mpg~factor(am),ylab="Miles per gallon",xlab="Manual",data=mtcars)
lm(mpg~.,data=mtcars)
data(mtcars)
cor(mtcars)
data(mtcars)[1,]
cor(mtcars)[1,]
lm(mpg~.,data=mtcars)
summary(mtcars$mpg[mtcars$am==1])
summary(mtcars$mpg[mtcars$am==0])
summary(mpg~am,data=mtcars)
summary(mtcars$mpg[mtcars$am==1])
summary(mtcars$mpg[mtcars$am==0])
cor(mtcars)[1,]
lmCor<-lm(mpg~cyl + disp + hp + wt
factor(am) + carb -1, data= mtcars)
lmCor<-lm(mpg~cyl + disp + hp + wt,
factor(am) + carb -1, data= mtcars)
lmCor<-lm(mpg~cyl + disp + hp + wt +
factor(am) + carb -1, data= mtcars)
summary(lmCor)
cor(mtcars)[1,]
??mtcars
summary(mtcars$mpg[mtcars$am==1])
summary(mtcars$mpg[mtcars$am==0])
lmTransmission<-lm(mpg ~ factor(am), data = mtcars)
lmTransmission
summary(lmTransmission)
cor(mtcars)[1,]
summary(lmCors)
lmCor<-lm(mpg~cyl + disp + hp + wt +
factor(am) + carb -1, data= mtcars)
summary(lmCors)
summary(lmCor)
lmTransmission<-lm(mpg ~ factor(am), data = mtcars)
summary(lmTransmission)
resid(lmTransmission)
lmCor<-lm(mpg~cyl + disp + hp + wt +
factor(am) + carb -1, data= mtcars)
summary(lmCor)
anova(lmTransmission,lmCor)
plot(lmCor)
par(mfrow=c(2,2))
plot(lmCor)
summary(lmTransmission)
36.988646 38.893271
36.988646-38.893271
plot(lmTransmission)
plot(lmCor)
library(ElemStatLearn)
install.packages("ElemStatLearn")
library(ElemStatLearn)
data(SAheart)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
set.seed(13234)
missClass = function(values,prediction){
sum(((prediction > 0.5)*1) != values)/length(values)
}
modFit<-train(chd~age+alcohol+obesity+tobacco+typea+ldl,
data=trainSA,
method="glm",
family="binomial")
missClass(trainSA$chd, predict(modFit, newdata = testSA))
missClass(trainSA$chd, predict(modFit, newdata = trainSA))
library(caret)
install.packages("caret")
library(ElemStatLearn)
library(caret)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
set.seed(13234)
missClass = function(values,prediction){
sum(((prediction > 0.5)*1) != values)/length(values)
}
modFit<-train(chd~age+alcohol+obesity+tobacco+typea+ldl,
data=trainSA,
method="glm",
family="binomial")
library(caret)
library(Caret)
library(Caret)
library(caret)
data(SAheart)
install.packages("caret")
library(caret)
library(caret)
install.packages("lme4")
library(caret)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
set.seed(13234)
missClass = function(values,prediction){
sum(((prediction > 0.5)*1) != values)/length(values)
}
modFit<-train(chd~age+alcohol+obesity+tobacco+typea+ldl,
data=trainSA,
method="glm",
family="binomial")
missClass(trainSA$chd, predict(modFit, newdata = testSA))
missClass(trainSA$chd, predict(modFit, newdata = trainSA))
modFit<-      train(chd ~ age + alcohol + obesity + tobacco + typea + ldl,
data = trainSA, method = "glm", family = "binomial")
missClass(trainSA$chd, predict(modFit, newdata = testSA))
missClass(trainSA$chd, predict(modFit, newdata = trainSA))
modSA<-      train(chd ~ age + alcohol + obesity + tobacco + typea + ldl,
data = trainSA, method = "glm", family = "binomial")
missClass(trainSA$chd, predict(modSA, newdata = testSA))
install.packages("shiny")
shiny::runApp('D:/cursos/DataScienceSpecialization/09_dataProducts/w1/ex5')
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
dTable(airquality, sPaginationType = "full_numbers")
library(rcharts)
library(rCharts)
install.packages("rCharts")
library(rCharts)
library(rcharts)
install.packages("rCharts")
library(rcharts)
library(rcharts)
dTable(airquality, sPaginationType = "full_numbers")
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text')
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text'),
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
shiny::runApp('D:/cursos/DataScienceSpecialization/09_dataProducts/w1/q1/ex5')
shiny::runApp('D:/cursos/DataScienceSpecialization/09_dataProducts/w1/q1/ex5')
install.packages("devtools")
install_github('slidify', 'ramnathv')
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
setwd("D:/cursos/DataScienceSpecialization/09_dataProducts/w1/q1/ex5")
setwd("D:/cursos/DataScienceSpecialization/09_dataProducts/w2/ex1")
setwd("D:/cursos/DataScienceSpecialization/09_dataProducts/w2/ex1")
author("first_deck")
library(slidify)
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
library("Slidify")
library(Slidify)
install_github('slidify', 'ramnathv/slidify')
install_github('slidify', 'ramnathv/slidify/slidify')
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
install_github('ramnathv/slidifyLibraries')
install_github('ramnathv/slidify')
install_github('ramnathv/slidify','ramnathv')
install.packages("digest")
install.packages("digest")
install_github('ramnathv/slidify','ramnathv')
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
install_github('slidify', 'ramnathv/slidify')
install_github('slidify', 'ramnathv')
author("first_deck")
library(slidify)
install_github('ramnathv/slidify')
library(slidify)
library(slidifyLibraries)
library(slidify)
library(stringr)
library(slidify)
install.packages("stringr")
library(slidify)
author("first_deck")
setwd("D:/cursos/DataScienceSpecialization/09_dataProducts/w2/ex1/first_deck")
--- .class #id
